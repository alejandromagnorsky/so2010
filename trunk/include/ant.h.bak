/*
**  SISTEMAS OPERATIVOS, 2C 2010
**  PRIMER TRABAJO PRACTICO
**  Simulacion de una colonia de hormigas.

**  File:       ant.h
**  Content:    structures and functions related to the ants in the simulation.
*/

#include "cmd.h"
#include <stdlib.h>

enum {
    ANT_STATE_ZERO,     /* Initial state. Simulation is not running. */
    ANT_STATE_SEEKING,  /* Ant is looking for food. Default behaviour. */
    ANT_STATE_FOOD,     /* Found food! */
    ANT_STATE_FOODBIG,  /* Found BIG food! */
    ANT_STATE_YELLED,   /* Yelled for aid in carrying BIG food. It's BIG. */
    ANT_STATE_AIDING,   /* Heard a naerby yell, and decided to help. */
    ANT_STATE_CARRYING  /* Carrying food back to the anthill. */    
};

/* Pointer to a handler function: takes an ant and an inbound command, and rets
** the following command to send to the server. */
typedef struct cmd_t* handler_f(struct st_ant_t, struct cmd_t*);

struct st_ant_t {
    int state;
    handler_f *handler;
    
    int x, y;       /* Ant's own position */
    int ahx, ahy;   /* Anthill position */
    int mx, my;     /* Memorized position */
};

typedef struct st_ant_t* ant_t;

/* antHandle does all the logic needed to make a decision .*/
struct cmd_t* antHandle(ant_t, struct cmd_t* cmd);

/* antHandle is divided into smaller functions, for readability. */
struct cmd_t* antHandleZero(ant_t, struct cmd_t* cmd);
struct cmd_t* antHandleSeeking(ant_t, struct cmd_t* cmd);
struct cmd_t* antHandleFood(ant_t, struct cmd_t* cmd);
struct cmd_t* antHandleFoodBig(ant_t, struct cmd_t* cmd);
struct cmd_t* antHandleYelled(ant_t, struct cmd_t* cmd);
struct cmd_t* antHandleAiding(ant_t, struct cmd_t* cmd);
struct cmd_t* antHandleCarrying(ant_t, struct cmd_t* cmd);
